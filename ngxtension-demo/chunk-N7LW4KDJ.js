import{a as A}from"./chunk-S4OXUUVE.js";import{a as b}from"./chunk-SHP4F2YS.js";import{a as l,cc as k,dc as w,e as m,r as s,va as S,xa as d}from"./chunk-MFECIPXD.js";function p(n,...D){let[h,o,u,y,f]=O(D);if(h){let t=null;return u instanceof d?t=u:t=b(p,u).get(d),h.pipe(A(t)).subscribe(e=>{let j=()=>{n.update(i=>{if(!r(i))return o?.(i,e)||e;if(!r(e)){let c=o?o(i,e):e;return r(c)?l(l({},i),c):c}return l(l({},i),o?.(i,e)||e)})};y?k(j):j()})}if(f){let t=u instanceof S?b(p,u):void 0;return w(()=>{n.update(e=>r(e)?l(l({},e),f()):f())},{allowSignalWrites:!0,injector:t})}return{with(...t){if(!this.subscription)this.subscription=new m;else if(this.subscription.closed)return console.info("[ngxtension connect] ConnectedSignal has been closed."),this;return this.subscription.add(p(n,...t,u,y)),this},subscription:null}}function O(n){return n.length>3?[n[0],n[1],n[2],n[3],null]:n.length===3?typeof n[2]=="boolean"?s(n[0])?[n[0],null,n[1],n[2],null]:[null,null,n[1],n[2],n[0]]:[n[0],n[1],n[2],!1,null]:n.length===2?typeof n[1]=="boolean"?[null,null,n[0],n[1],null]:typeof n[1]=="function"?[n[0],n[1],null,!1,null]:[n[0],null,n[1],!1,null]:s(n[0])?[n[0],null,null,!1,null]:typeof n[0]=="function"?[null,null,null,!1,n[0]]:[null,null,n[0],!1,null]}function r(n){return typeof n=="object"&&n!==void 0&&n!==null&&!Array.isArray(n)}export{p as a};
